@page "/books"
@inherits BookListBase
@using CoursePlus.Shared.Infrastructure 

<div id="wrapper">

    <Header Class="header" UkSticky="top:20; cls-active:header-sticky">
        <Breadcrumbs>
            <li><a href="/"> <i class="uil-home-alt"></i> </a></li>
            <li>Books</li>
        </Breadcrumbs>
    </Header>

    <SearchOnMobile></SearchOnMobile>

    <SearchOnDesktop></SearchOnDesktop>

    <SideNav></SideNav>

    <!-- content -->
    <div class="page-content">

        <div class="container">

            <h1> Books </h1>

            <div class="mt-lg-5" uk-grid>

                <div class="uk-width-3-4@m">

                    <h4> Featured books </h4>

                    <div class="uk-position-relative" tabindex="-1" uk-slider="autoplay: true">

                        <ul class="uk-slider-items uk-child-width-1-2 uk-child-width-1-4@m uk-child-width-1-3@s uk-grid">

                            @if (FeaturedBooks != null)
                            {
                                foreach (var OneBook in FeaturedBooks.Items)
                                {
                                    <li>
                                        <a @onclick="@(e => ViewBook(OneBook))">
                                            <div class="book-card">
                                                <div class="book-cover">
                                                    <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(OneBook.Thumbnail.Data))" alt="">
                                                </div>
                                                <div class="book-content">
                                                    <h5>@OneBook.Title</h5>
                                                </div>
                                            </div>
                                        </a>
                                    </li>
                                }
                            }

                        </ul>

                        <div class="uk-flex uk-flex-center mt-2">
                            <ul class="uk-slider-nav uk-dotnav"></ul>
                        </div>

                    </div>

                </div>

                <div class="uk-width-1-4@m">

                    <h4> Popular books </h4>

                    <div id="book-popular">

                        @if (PopularBooks != null)
                        {
                            @foreach (var OneBook in PopularBooks.Items)
                            {
                                <div class="book-popular-card">
                                    <a @onclick="@(e => ViewBook(OneBook))">
                                        <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(OneBook.Thumbnail.Data))" alt="" class="cover-img">
                                    </a>
                                    <div class="book-details">
                                        <a @onclick="@(e => ViewBook(OneBook))">
                                            <h4>@OneBook.Title</h4>
                                        </a>
                                        <p>@OneBook.Author</p>
                                    </div>
                                    <a href="#"> <i class="icon-feather-bookmark icon-small"></i></a>
                                </div>
                            }
                        }

                    </div>
                </div>

            </div>

            <h3> Category</h3>

            <nav class="responsive-tab style-1">
                <ul uk-switcher="connect: #categories-tab ; animation: uk-animation-fade">

                    @if (Categories != null)
                    {
                        int i = 0;
                        foreach (var OneCategory in Categories)
                        {
                            <li class="@((i == 0) ? "uk-active" : "")"><a href="#">@OneCategory.Name</a></li>
                            i++;
                        }
                    }

                </ul>
            </nav>

            <ul class="uk-switcher uk-margin" id="categories-tab">

                @if (Categories != null)
                {
                    foreach (var OneCategory in Categories)
                    {
                        <li>
                            <div class="section-small">
                                
                                    <AsyncComponent TResult="PaginatedList<Book>" TInput="int" Input="@OneCategory.Id" AsyncOperation="@GetBooksForCategory">

                                        <DataReadyFragment Context="SomeBooks"> @* <--- the result of the async operation of type PaginatedList *@

                                            <div class="uk-child-width-1-5@m uk-child-width-1-3@s uk-child-width-1-2" uk-grid>

                                                @foreach (var OneBook in SomeBooks.Items)
                                                {
                                                    <div>
                                                        <a @onclick="@(e => ViewBook(OneBook))" class="uk-text-bold">
                                                            @if (OneBook.Thumbnail != null)
                                                            {
                                                            <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(OneBook.Thumbnail.Data))" class="mb-2 w-100 shadow rounded">
                                                            }
                                                            @OneBook.Title
                                                        </a>
                                                    </div>
                                                }
                                                
                                            </div>

                                            <div class=" uk-flex uk-flex-center uk-margin-top uk-margin-bottom uk-width-expand">

                                                <Pager PageIndex=@SomeBooks.PageIndex TotalPages=@SomeBooks.TotalPages OnClick="@((newPageNumber) => PageIndexChanged(SomeBooks, newPageNumber, OneCategory.Id))"
                                                        HasNextPage=@SomeBooks.HasNextPage HasPreviousPage=@SomeBooks.HasPreviousPage>
                                                </Pager>

                                            </div>
                                            

                                        </DataReadyFragment>

                                        <DataMissingFragment>
                                            <b>No data</b>
                                        </DataMissingFragment>

                                    </AsyncComponent>

                            </div>
                        </li>
                    }
                }

            </ul>

            <Footer></Footer>

        </div>

    </div>

</div>
