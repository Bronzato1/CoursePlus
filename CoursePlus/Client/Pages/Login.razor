@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }
}

<div uk-height-viewport class="uk-flex uk-flex-middle">
    <div class="uk-width-2-3@m uk-width-1-2@s m-auto rounded">
        <div class="uk-child-width-1-2@m uk-grid-collapse bg-gradient-grey" uk-grid>

            <!-- column one -->
            <div class="uk-margin-auto-vertical uk-text-center uk-animation-scale-up p-3 uk-light">
                <i class=" uil-graduation-hat icon-large"></i>
                <h3 class="mb-4"> Courseplus</h3>
                <p>The Place You can learn Every Thing. </p>
            </div>

            <!-- column two -->
            <div class="uk-card-default p-5 rounded">

                <div class="mb-4 uk-text-center">
                    <h3 class="mb-0"> Welcome back</h3>
                    <p class="my-2">Login to manage your account.</p>
                </div>

                <EditForm Model="loginModel" OnValidSubmit="HandleLogin">

                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="uk-form-group">
                        <label class="uk-form-label"> Email</label>

                        <div class="uk-position-relative w-100">
                            <span class="uk-form-icon">
                                <i class="icon-feather-mail"></i>
                            </span>
                            <InputText Id="email" class="uk-input form-control" type="email" @bind-Value="loginModel.Email" placeholder="" />
                        </div>
                        <ValidationMessage For="@(() => loginModel.Email)" />
                    </div>

                    <div class="uk-form-group">
                        <label class="uk-form-label"> Password</label>

                        <div class="uk-position-relative w-100">
                            <span class="uk-form-icon">
                                <i class="icon-feather-lock"></i>
                            </span>
                            <InputText Id="password" class="uk-input form-control" type="password" @bind-Value="loginModel.Password" placeholder="" />
                        </div>
                        <ValidationMessage For="@(() => loginModel.Password)" />

                    </div>

                    <div class="mt-4 uk-flex-middle uk-grid-small" uk-grid>
                        <div class="uk-width-expand@s">
                            <p> Dont have account ? <a href="signup">Sign up</a></p>
                        </div>
                        <div class="uk-width-auto@s">
                            <button type="submit" class="btn btn-default">Login</button>
                        </div>
                    </div>

                </EditForm>

                @if (ShowErrors)
                {
                    <div class="mt-4 alert alert-danger" role="alert">
                        <p>@Error</p>
                    </div>
                }

            </div><!--  End column two -->

        </div>
    </div>
</div>
